apiVersion: apps/v1
kind: Deployment
metadata:
  name: course-website
  labels:
    app: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-container
        image: manoharshetty507/course-website:v1
        ports:
        - containerPort: 5000  # Container listens on port 5000
        env:
        - name: FLASK_ENV
          value: "production"
        readinessProbe:
          httpGet:
            path: /health
            port: 5000  # Readiness probe on port 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 5000  # Liveness probe on port 5000
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: course-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb" # Use Network Load Balancer
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing" # Public NLB
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health" # Custom health check path
spec:
  type: LoadBalancer
  selector:
    app: flask-app
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 5000  # Exposing container port 5000 as service port 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 5000  # Exposing container port 5000 as service port 443
  - name: custom
    protocol: TCP
    port: 31890
    targetPort: 5000  # Exposing container port 5000 as service port 31890
